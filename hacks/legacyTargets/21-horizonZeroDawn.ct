<!--
    Omnified Horizon Zero Dawn
    Written By: Matt Weber (https://badecho.com) (https://twitch.tv/omni)
    Copyright 2022 Bad Echo LLC

    Bad Echo Technologies are licensed under a
    Creative Commons Attribution-NonCommercial 4.0 International License.

    See accompanying file LICENSE.md or a copy at:
    http://creativecommons.org/licenses/by-nc/4.0/
-->
<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="31">
  <CheatEntries>
    <CheatEntry>
      <ID>8</ID>
      <Description>"OMNIFY"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
 Omnified Horizon Zero Dawn
 Written By: Matt Weber
 Copyright 2020 Bad Echo LLC

 Visit my hackpad for my information on what I do:
 https://badecho.com

 Catch my live streams on my official Twitch channel:
 https://twitch.tv/omni
}

[ENABLE]
{$lua}
function register()
  require("Omnified")
  registerOmnification()
end

{$asm}
luacall(register())
alloc(zeroValue,8)

zeroValue:
  dd (float)0.0
  
alloc(checkBadPointer,$1000)

registersymbol(checkBadPointer)

checkBadPointer:
  push rax
  push rdx
  push r8
  push r9
  push rbp
  mov rbp,rsp
  and spl,F0
  sub rsp,20
  mov edx,4
  call isBadReadPtr
  mov rcx,eax
  mov rsp,rbp
  pop rbp
  pop r9
  pop r8
  pop rdx
  pop rax
  ret

// Gets the player's root struct.
// rax -&gt; 48 -&gt; 808 -&gt; 180 -&gt; 0x70 == x
define(omniPlayerHook,"HorizonZeroDawn.exe"+BB5631)

assert(omniPlayerHook, C5 FA 10 40 64)
alloc(getPlayer,$1000, omniPlayerHook)
alloc(player,8)
alloc(playerHealth,8)
alloc(baseHealthValue,8)
alloc(healthNormalizationX,8)

registersymbol(omniPlayerHook)
registersymbol(player)
registersymbol(playerHealth)

getPlayer:
  pushf
  cmp rbx,0
  jne getPlayerOriginalCode
  cmp r13,0
  jne getPlayerOriginalCode
  cmp r10,0xF80
  jne getPlayerOriginalCode
  push rbx
  push rcx
  mov rbx,playerHealth
  sub rsp,10
  movdqu [rsp],xmm0
  cmp [rbx],rax
  je skipPlayerReset  
  movss xmm0,[rax+68]  
  movss [rax+64],xmm0
skipPlayerReset:
  mov [rbx],rax  
  mov rcx,[rax+30]
  movss xmm0,[rcx+2C]
  ucomiss xmm0,[baseHealthValue]
  ja healthNormalizeCleanup
  mulss xmm0,[healthNormalizationX]
  movss [rcx+2C],xmm0
  movss [rax+64],xmm0
  movss [rax+68],xmm0
  movss xmm0,[rax+74]
  mulss xmm0,[healthNormalizationX]
  movss [rax+74],xmm0
healthNormalizeCleanup:  
  movdqu xmm0,[rsp]
  add rsp,10
  mov rcx,[rax+48]
  mov rbx,player
  mov [rbx],rcx
  pop rcx
  pop rbx
getPlayerOriginalCode:
  popf
  vmovss xmm0,[rax+64]
  jmp getPlayerReturn

omniPlayerHook:
  jmp getPlayer
  
getPlayerReturn:

baseHealthValue:
  dd (float)200.0
  
healthNormalizationX:
  dd (float)2.0


// Gets the player's coordinates.
// UNIQUE AOB: C5 FA 10 41 70 * * * * * * * * 80 01 00 00 * * * * C5
define(omniPlayerCoordsHook,"HorizonZeroDawn.exe"+66DEFE)

assert(omniPlayerCoordsHook, C5 FA 10 41 70)
alloc(getPlayerCoords,$1000, omniPlayerCoordsHook)
alloc(playerCoords,8)

registersymbol(omniPlayerCoordsHook)
registersymbol(playerCoords)

getPlayerCoords:
  push rbx
  mov rbx,playerCoords
  mov [rbx],rcx
  pop rbx
getPlayerCoordsOriginalCode:
  vmovss xmm0,[rcx+70]
  jmp getPlayerCoordsReturn


omniPlayerCoordsHook:
  jmp getPlayerCoords
  
getPlayerCoordsReturn:

// Initiates the Apocalypse system.
// xmm5: Current Health
// xmm2: Damage Done
// rbx: Target Destructibility
// UNIQUE AOB: C5 F8 28 BC 24 F0 00 00 00 * * * * 76
define(omnifyApocalypseSystem,"HorizonZeroDawn.exe"+C5755C)

assert(omnifyApocalypseSystem, C5 F8 28 BC 24 F0 00 00 00)
alloc(initiateApocalypse,$1000, omnifyApocalypseSystem)

registersymbol(omnifyApocalypseSystem)

initiateApocalypse:
  pushf
  push rax
  mov rax,logApocalypse
  cmp [rax],1
  pop rax
  je initiateApocalypseOriginalCode
  push rax
  mov rax,playerHealth
  cmp [rax],0
  pop rax
  je initiateApocalypseOriginalCode
  ucomiss xmm5,[zeroValue]
  jz initiateApocalypseOriginalCode
  push rax
  push rbx
  sub rsp,10
  movdqu [rsp],xmm1
  push rcx
  mov rcx,playerHealth  
  mov rax,[rcx]
  movss xmm1,[rax+68]
  cmp rbx,rax
  pop rcx
  jne initiateEnemyApocalypse
initiatePlayerApocalypse:
  mov rax,playerCoords
  mov rbx,[rax]
  lea rax,[rbx+70]
  sub rsp,8
  movd [rsp],xmm2
  sub rsp,8
  movd [rsp],xmm5
  sub rsp,8
  movd [rsp],xmm1
  push rax
  call executePlayerApocalypse
  jmp initiateApocalypseExit
initiateEnemyApocalypse:
  sub rsp,8
  movd [rsp],xmm2
  sub rsp,8
  movd [rsp],xmm5
  call executeEnemyApocalypse
initiateApocalypseExit:
  movd xmm2,eax
  movd xmm5,ebx  
  movdqu xmm1,[rsp]
  add rsp,10
  pop rbx
  pop rax
initiateApocalypseOriginalCode:
  popf
  vmovaps xmm7,[rsp+000000F0]
  jmp initiateApocalypseReturn


omnifyApocalypseSystem:
  jmp initiateApocalypse
  nop 4
initiateApocalypseReturn:

yIsVertical:
  dd 0
  
teleportitisDisplacementX:
  dd (float)10.0
  
playerDamageX:
  dd (float)1.43


// Initiates the Predator system.
// rdi == target enemy coordinates struct +120 == x, 128 == y 130 == z
// rsp+40 x offset in float form
// rsp+44 y offset in float form
// rsp+48 z offset in float form
// UNIQUE AOB: C5 FA 10 44 24 40 * * * * * * * * 24 D0
define(omnifyPredatorHook, "HorizonZeroDawn.exe"+C1560C)

assert(omnifyPredatorHook, C5 FA 10 44 24 40)
alloc(initiatePredator,$1000, omnifyPredatorHook)
alloc(identityValue,1)

registersymbol(omnifyPredatorHook)
  
initiatePredator:
  pushf  
  push rax
  mov rax,playerCoords
  cmp [rax],0
  pop rax
  je initiatePredatorOriginalCode
  sub rsp,10
  movdqu [rsp],xmm0
  sub rsp,10
  movdqu [rsp],xmm1
  sub rsp,10
  movdqu [rsp],xmm2
  push rax
  push rbx
  push rcx
  mov rax,[rdi+1F0]
  movss xmm0,[rax+64]
  ucomiss xmm0,[zeroValue]  
  ja continuePredator
  movss xmm0,[zeroValue]
  movss [rsp+8A],xmm0
  movss [rsp+8E],xmm0
  movss [rsp+92],xmm0
  jmp initiatePredatorExit
continuePredator:
  movups xmm2,[rsp+8A]
  mov rax,playerCoords
  mov rbx,[rax]
  push [rbx+70]
  push [rbx+78]
  sub rsp,10
  cvtsd2ss xmm0,[rdi+120]
  movd [rsp],xmm0
  cvtsd2ss xmm0,[rdi+128]
  movd [rsp+4],xmm0
  cvtsd2ss xmm0,[rdi+130]
  movd [rsp+8],xmm0
  movups xmm0,[rsp]
  add rsp,10
  movhlps xmm1,xmm0
  sub rsp,8
  movq [rsp],xmm0
  sub rsp,8
  movq [rsp],xmm1  
  movss xmm0,[identityValue]
  shufps xmm0,xmm0,0  
  sub rsp,10
  movups [rsp],xmm0  
  movhlps xmm1,xmm2
  sub rsp,8
  movq [rsp],xmm2
  sub rsp,8
  movq [rsp],xmm1
  call executePredator
  mov [rsp+8A],eax
  mov [rsp+8E],ebx
  mov [rsp+92],ecx
initiatePredatorExit:
  pop rcx
  pop rbx
  pop rax
  movdqu xmm2,[rsp]
  add rsp,10
  movdqu xmm1,[rsp]
  add rsp,10
  movdqu xmm0,[rsp]  
  add rsp,10
initiatePredatorOriginalCode:
  popf
  vmovss xmm0,[rsp+40]
  jmp initiatePredatorReturn


omnifyPredatorHook:
  jmp initiatePredator
  nop 
initiatePredatorReturn:

skipBoostY:
  dd 0

skipBoostZ:
  dd 1
  
identityValue:
  dd (float)1.0
  
threatDistance:
  dd (float)4.0
  
  
// Modifies the speed of the player.
// UNIQUE AOB: 0F 58 47 70 8B 44 24 38
define(omnifyPlayerSpeedHook, "HorizonZeroDawn.exe" + 177DCFE)

assert(omnifyPlayerSpeedHook, 0F 58 47 70 8B 44 24 38)
alloc(setPlayerSpeed,$1000, omnifyPlayerSpeedHook)
alloc(playerSpeedX,8)

registersymbol(omnifyPlayerSpeedHook)
registersymbol(playerSpeedX)

setPlayerSpeed:
  sub rsp,10
  movdqu [rsp],xmm1
  movss xmm1,[playerSpeedX]
  shufps xmm1,xmm1,0  
  sub rsp,10
  movups [rsp],xmm1
  movss xmm1,[identityValue]
  movss [rsp+8],xmm1
  movups xmm1,[rsp]
  add rsp,10
  mulps xmm0,xmm1
  movdqu xmm1,[rsp]
  add rsp,10
setPlayerSpeedOriginalCode:
  addps xmm0,[rdi+70]
  mov eax,[rsp+38]
jmp setPlayerSpeedReturn


omnifyPlayerSpeedHook:
jmp setPlayerSpeed
  nop 3
setPlayerSpeedReturn:

playerSpeedX:
  dd (float)1.0
  
  
// Disables coordinate validation when player speed is increased.
// UNIQUE AOB: C5 F8 11 71 70
define(omnifyPlayerSpeedValidationDisable1Hook, "HorizonZeroDawn.exe" + 670F98)

assert(omnifyPlayerSpeedValidationDisable1Hook, C5 F8 11 71 70)
alloc(disablePlayerSpeedValidation1,$1000, omnifyPlayerSpeedValidationDisable1Hook)

registersymbol(omnifyPlayerSpeedValidationDisable1Hook)

disablePlayerSpeedValidation1:
  pushf
  sub rsp,10
  movdqu [rsp],xmm0
  movss xmm0,[playerSpeedX]
  ucomiss xmm0,[identityValue]
  ja disablePlayerSpeedValidation1Skip
disablePlayerSpeedValidation1OriginalCode:  
  vmovups [rcx+70],xmm6
disablePlayerSpeedValidation1Skip:
  movdqu xmm0,[rsp]
  add rsp,10
  popf  
  jmp disablePlayerSpeedValidation1Return


omnifyPlayerSpeedValidationDisable1Hook:
  jmp disablePlayerSpeedValidation1
  
disablePlayerSpeedValidation1Return:

// Disables coordinate validation when player speed is increased.
// Unique AOB: C5 F8 11 48 70 * 8B
define(omnifyPlayerSpeedValidationDisable2Hook, "HorizonZeroDawn.exe" + 671022)

assert(omnifyPlayerSpeedValidationDisable2Hook, C5 F8 11 48 70)
alloc(disablePlayerSpeedValidation2,$1000, omnifyPlayerSpeedValidationDisable2Hook)

registersymbol(omnifyPlayerSpeedValidationDisable2Hook)

disablePlayerSpeedValidation2:
  pushf
  sub rsp,10
  movdqu [rsp],xmm0
  movss xmm0,[playerSpeedX]
  ucomiss xmm0,[identityValue]
  ja disablePlayerSpeedValidation2Skip
disablePlayerSpeedValidation2OriginalCode:
  vmovups [rax+70],xmm1
disablePlayerSpeedValidation2Skip:
  movdqu xmm0,[rsp]
  add rsp,10
  popf  
  jmp disablePlayerSpeedValidation2Return


omnifyPlayerSpeedValidationDisable2Hook:
  jmp disablePlayerSpeedValidation2

disablePlayerSpeedValidation2Return:


// Disables coordinate validation when player speed is increased.
// UNIQUE AOB: C5 78 11 40 70
define(omnifyPlayerSpeedValidationDisable3Hook, "HorizonZeroDawn.exe" + 678C14)

assert(omnifyPlayerSpeedValidationDisable3Hook, C5 78 11 40 70)
alloc(disablePlayerSpeedValidation3,$1000, omnifyPlayerSpeedValidationDisable3Hook)

registersymbol(omnifyPlayerSpeedValidationDisable3Hook)

disablePlayerSpeedValidation3:
  pushf
  sub rsp,10
  movdqu [rsp],xmm0
  movss xmm0,[playerSpeedX]
  ucomiss xmm0,[identityValue]
  ja disablePlayerSpeedValidation3Skip
disablePlayerSpeedValidation3OriginalCode:
  vmovups [rax+70],xmm8
disablePlayerSpeedValidation3Skip:
  movdqu xmm0,[rsp]
  add rsp,10
  popf  
  jmp disablePlayerSpeedValidation3Return


omnifyPlayerSpeedValidationDisable3Hook:
  jmp disablePlayerSpeedValidation3

disablePlayerSpeedValidation3Return:

// Disables coordinate validation when player speed is increased.
// UNIQUE AOB: C4 C1 78 11 58 70
define(omnifyPlayerSpeedValidationDisable4Hook, "HorizonZeroDawn.exe" + 674BC4)

assert(omnifyPlayerSpeedValidationDisable4Hook, C4 C1 78 11 58 70)
alloc(disablePlayerSpeedValidation4,$1000, omnifyPlayerSpeedValidationDisable4Hook)

registersymbol(omnifyPlayerSpeedValidationDisable4Hook)

disablePlayerSpeedValidation4:
  pushf
  sub rsp,10
  movdqu [rsp],xmm0
  movss xmm0,[playerSpeedX]
  ucomiss xmm0,[identityValue]
  ja disablePlayerSpeedValidation4Skip
disablePlayerSpeedValidation4OriginalCode:
  vmovups [r8+70],xmm3
disablePlayerSpeedValidation4Skip:
  movdqu xmm0,[rsp]
  add rsp,10
  popf    
  jmp disablePlayerSpeedValidation4Return


omnifyPlayerSpeedValidationDisable4Hook:
  jmp disablePlayerSpeedValidation4
  nop

disablePlayerSpeedValidation4Return:


  
alloc(morphScaleData,48000)
alloc(morphScaleIndex,8)
  
registersymbol(morphScaleData)
registersymbol(morphScaleIndex)

morphScaleIndex:
  dd 0  
  
// Performs morphing on creatures' scales.
// [rax+48]+4B4 is safe.
// UNIQUE AOB: C5 FA 10 40 64 C3 * * * * 46
define(omnifyScaleMorphHook, "HorizonZeroDawn.exe"+BF06BB)

assert(omnifyScaleMorphHook, C5 F8 10 80 E0 00 00 00)
alloc(morphScale,$1000, omnifyScaleMorphHook)
alloc(abominifyRandomState,8)
alloc(abominifyMorphStepsResultUpper,8)
alloc(abominifyMorphStepsResultLower,8)
alloc(abominifyHeightResultUpper,8)
alloc(abominifyHeightResultLower,8)
alloc(abominifyWidthResultUpper,8)
alloc(abominifyWidthResultLower,8)
alloc(abominifyDepthResultUpper,8)
alloc(abominifyDepthResultLower,8)
alloc(abominifyMorphModeResultUpper,8)
alloc(abominifyMorphModeResultLower,8)
alloc(unnaturalBigThreshold,8)
alloc(unnaturalBigX,8)
alloc(unnaturalSmallX,8)
alloc(abominifyDivisor,8)
alloc(defaultScaleX,8)
alloc(speedMorph,8)
alloc(speedMorphDivisor,8)
alloc(stopMorphs,8)
alloc(zeroValue,8)
alloc(aloyWeaponThiccnessX,8)
alloc(forceScrub,8)

registersymbol(omnifyScaleMorphHook)
registersymbol(abominifyMorphStepsResultUpper)
registersymbol(abominifyMorphStepsResultLower)
registersymbol(abominifyHeightResultUpper)
registersymbol(abominifyHeightResultLower)
registersymbol(abominifyWidthResultUpper)
registersymbol(abominifyWidthResultLower)
registersymbol(abominifyDepthResultUpper)
registersymbol(abominifyDepthResultLower)
registersymbol(unnaturalBigThreshold)
registersymbol(unnaturalBigX)
registersymbol(speedMorphDivisor)
registersymbol(unnaturalSmallX)
registersymbol(speedMorph)
registersymbol(stopMorphs)
registersymbol(aloyWeaponThiccnessX)
registersymbol(forceScrub)

morphScale:
  pushf
  push rbx
  mov rbx,player
  cmp [rbx],0
  pop rbx
  je morphScaleOriginalCode
  push rbx
  push rcx
  mov rbx,player
  mov rcx,[rbx]
  cmp rcx,rax
  pop rcx
  pop rbx
  je morphScaleOriginalCode
  push rbx
  push rcx  
  push rdx
  mov rbx,rax
  cmp [forceScrub],1
  je scrubMorphData
  cmp [rbx+188],0
  jne applyMorphScaleFromData  
checkMorphDataIndexLimit:
  cmp [morphScaleIndex],#999
  jne incrementMorphDataIndex
scrubMorphData:
  mov [forceScrub],0
  mov [morphScaleIndex],0
  push rax
  mov rax,0
nextMorphDataScrub:
  add rax,#48
  cmp rax,#48000
  je exitMorphDataScrub
  mov rdx,morphScaleData
  add rdx,rax
  mov [rdx],0
  mov [rdx+4],0
  mov [rdx+8],0
  mov [rdx+C],0
  mov [rdx+10],0
  mov [rdx+14],0
  mov [rdx+18],0
  mov [rdx+1C],0
  mov [rdx+20],0
  mov [rdx+24],0
  mov [rdx+28],0
  mov [rdx+2C],0
  jmp nextMorphDataScrub
exitMorphDataScrub:
  pop rax
incrementMorphDataIndex:
  inc [morphScaleIndex]
  mov rcx,[morphScaleIndex]
  mov [rbx+188],rcx
applyMorphScaleFromData:  
  mov rdx,morphScaleData
  mov rcx,[rbx+188]   
  push rax  
  push rdx
  mov rax,rcx
  mov rcx,#48
  mul rcx
  mov rcx,rax  
  pop rdx
  pop rax
  add rdx,rcx  
  cmp [rdx],0
  je generateNewMorphTargets
  cmp [stopMorphs],1
  je morphScaleExit
  dec [rdx]
  cmp [rdx],0
  jge continueStepMorph
  mov [rdx],0  
continueStepMorph:
  jmp stepMorph
generateNewMorphTargets:
  sub rsp,10
  movdqu [rsp],xmm0
  movss xmm0,[rdx+4]
  push rax
  mov rax,zeroValue
  ucomiss xmm0,[rax]
  pop rax
  ja skipInitializeDefaultScales
  movss xmm0,[defaultScaleX]
  movss [rdx+4],xmm0
  movss [rdx+8],xmm0
  movss [rdx+C],xmm0
skipInitializeDefaultScales:
  movss [rdx+14],xmm0
  movss xmm0,[rdx+8]
  movss [rdx+18],xmm0
  movss xmm0,[rdx+C]
  movss [rdx+1C],xmm0
  push rax
  push rcx
  push rdx
  mov rcx,player
  mov rdx,[rcx]
  cmp rdx,[rbx+1C8]
  pop rdx
  pop rcx  
  je aloyWeaponUnnaturalize
  cmp [rdx+10],1
  je generateNewMorphTargetsExit
  movss xmm0,[rdx+20]
  mov rax,zeroValue
  ucomiss xmm0,[rax]
  ja skipGenerateMorphSteps
  push [abominifyMorphStepsResultLower]
  push [abominifyMorphStepsResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  cvtsi2ss xmm0,eax
  movss [rdx+20],xmm0
skipGenerateMorphSteps:
  movss xmm0,[rdx+20]
  cmp [speedMorph],1
  jne generateMonsterMorphTargets
  divss xmm0,[speedMorphDivisor]  
generateMonsterMorphTargets:  
  cvtss2si eax,xmm0
  mov [rdx],eax
  push [abominifyHeightResultLower]
  push [abominifyHeightResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  cvtsi2ss xmm0,eax
  divss xmm0,[abominifyDivisor]
  movss [rdx+28],xmm0
  cmp [rdx+10],0 
  jne skipGenerateMorphMode
  push [abominifyMorphModeResultLower]
  push [abominifyMorphModeResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  jmp applyMorphMode
skipGenerateMorphMode:
  mov eax,[rdx+10]
applyMorphMode:
  cmp eax,1
  je staticUnnaturalMorphing
  cmp eax,5
  jle uniformMorphing
  jmp nonUniformMorphing
staticUnnaturalMorphing:
  mov [rdx+10],1
  ucomiss xmm0,[unnaturalBigThreshold]
  ja unnaturalBiggify
  mulss xmm0,[unnaturalSmallX]
  jmp unnaturalizeIt
unnaturalBiggify:
  mulss xmm0,[unnaturalBigX]
  jmp unnaturalizeIt
aloyWeaponUnnaturalize:
  mov [rdx+10],1  
  movss xmm0,[aloyWeaponThiccnessX]  
unnaturalizeIt:
  movss [rdx+4],xmm0
  movss [rdx+8],xmm0
  movss [rdx+C],xmm0
  jmp generateNewMorphTargetsExit
uniformMorphing:
  mov [rdx+10],5
  movss [rdx+24],xmm0
  movss [rdx+2C],xmm0
  jmp generateNewMorphTargetsExit
nonUniformMorphing:
  mov [rdx+10],8
  push [abominifyWidthResultLower]
  push [abominifyWidthResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  cvtsi2ss xmm0,eax
  divss xmm0,[abominifyDivisor]
  movss [rdx+24],xmm0
  push [abominifyDepthResultLower]
  push [abominifyDepthResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  cvtsi2ss xmm0,eax
  divss xmm0,[abominifyDivisor]
  movss [rdx+2C],xmm0
generateNewMorphTargetsExit:
  pop rax
  movdqu xmm0,[rsp]
  add rsp,10
  jmp morphScaleExit
stepMorph:
  cmp [rdx+10],1  
  je morphScaleExit
  sub rsp,10
  movdqu [rsp],xmm0
  sub rsp,10
  movdqu [rsp],xmm1
  push rax
  push rsi
  movss xmm0,[rdx+20]
  cmp [speedMorph],1
  jne generateMorphsForStep
  divss xmm0,[speedMorphDivisor]  
generateMorphsForStep:
  cvtss2si eax,xmm0
  mov esi,[rdx]
  sub eax,esi
  cvtsi2ss xmm1,eax
  divss xmm1,xmm0 //[rdx+20]
  // Width Step
  movss xmm0,[rdx+24]
  subss xmm0,[rdx+14]
  mulss xmm0,xmm1
  addss xmm0,[rdx+14]
  movss [rdx+4],xmm0
  // Height Step
  movss xmm0,[rdx+28]
  subss xmm0,[rdx+18]
  mulss xmm0,xmm1
  addss xmm0,[rdx+18]
  movss [rdx+8],xmm0
  // Depth Step
  movss xmm0,[rdx+2C]
  subss xmm0,[rdx+1C]
  mulss xmm0,xmm1
  addss xmm0,[rdx+1C]
  movss [rdx+C],xmm0
  pop rsi
  pop rax
  movdqu xmm1,[rsp]
  add rsp,10
  movdqu xmm0,[rsp]
  add rsp,10
morphScaleExit:  
  pop rdx
  pop rcx
  pop rbx
morphScaleOriginalCode:
  popf
  vmovups xmm0,[rax+000000E0]
  jmp morphScaleReturn


omnifyScaleMorphHook:
  jmp morphScale
  nop 3
morphScaleReturn:

abominifyRandomState:
  dd 0

abominifyMorphStepsResultUpper:
  dd #450

abominifyMorphStepsResultLower:
  dd #25

abominifyHeightResultUpper:
  dd #1400

abominifyHeightResultLower:
  dd #800

abominifyWidthResultUpper:
  dd #2000

abominifyWidthResultLower:
  dd #600

abominifyDepthResultUpper:
  dd #1400

abominifyDepthResultLower:
  dd #600

abominifyMorphModeResultUpper:
  dd #13

abominifyMorphModeResultLower:
  dd 1

abominifyDivisor:
  dd (float)1000.0

unnaturalBigThreshold:
  dd (float)1.0

unnaturalSmallX:
  dd (float)1.0

unnaturalBigX:
  dd (float)1.35

stopMorphs:
  dd 0
  
speedMorph:
  dd 0
  
speedMorphDivisor:
  dd (float)4.0

defaultScaleX:
  dd (float)1.0

zeroValue:
  dd 0	
  
aloyWeaponThiccnessX:
  dd (float)1.8
  
forceScrub:
  dd 0

// Applies the Abomnification system.
// UNIQUE AOB: C5 7A 7F 24 0A
define(omnifyAbominationHook, "HorizonZeroDawn.exe"+7FB64A)

assert(omnifyAbominationHook, C5 7A 7F 24 0A)
alloc(abomnifyCreature,$1000, omnifyAbominationHook)
alloc(baseScalingMatrix,100)

registersymbol(omnifyAbominationHook)

abomnifyCreature:
  pushf
  push rax
  push rbx
  mov rax,player
  mov rbx,[rax]
  mov rax,[r15+48]
  cmp rbx,rax
  pop rbx
  pop rax
  je abomnifyCreatureOriginalCode
  cmp r8,1
  jg abomnifyCreatureOriginalCode
  push rax
  push rbx
  push rcx
  push rdx
  sub rsp,10
  movdqu [rsp],xmm0
  mov rax,[r15+48]
  mov rbx,[rax+188]
  cmp rbx,0
  je abomnifyCreatureExit  
  cmp rbx,#999
  ja abomnifyCreatureExit
  mov rax,rbx
  mov rcx,#48
  mul rcx
  mov rcx,rax
  mov rdx,morphScaleData
  add rdx,rcx
  mov rbx,[rdx+4]
  cmp rbx,0
  je abomnifyCreatureExit
  sub rsp,10
  movups xmm0,[baseScalingMatrix]  
  movups [rsp],xmm0      
  movss xmm0,[rdx+4]
  movd [rsp],xmm0
  movups xmm0,[rsp]
  mulps xmm12,xmm0
  
  movups xmm0,[baseScalingMatrix]
  movups [rsp],xmm0
  movss xmm0,[rdx+C]
  movd [rsp+4],xmm0
  movups xmm0,[rsp]
  mulps xmm13,xmm0
  
  movups xmm0,[baseScalingMatrix]
  movups [rsp],xmm0
  movss xmm0,[rdx+8]
  movd [rsp+8],xmm0
  movups xmm0,[rsp]
  mulps xmm11,xmm0
  add rsp,10
abomnifyCreatureExit:
  movdqu xmm0,[rsp]
  add rsp,10
  pop rdx
  pop rcx
  pop rbx
  pop rax
abomnifyCreatureOriginalCode:
  popf
  vmovdqu [rdx+rcx],xmm12
  jmp abomnifyCreatureReturn


omnifyAbominationHook:
  jmp abomnifyCreature
  
abomnifyCreatureReturn:

baseScalingMatrix:
  dd (float)1.0
  dd (float)1.0
  dd (float)1.0
  dd (float)1.0


// Activates Omni's Judicial Wasting of Watchers hack.
// UNIQUE AOB: C5 FA 10 40 64 C3 * * * * 46
define(omnifyFuckWatchersHook, "HorizonZeroDawn.exe" + B9DC9C)

assert(omnifyFuckWatchersHook, C5 FA 10 40 64)
alloc(fuckUpWatchers,$1000, omnifyFuckWatchersHook)
alloc(watcherHealthValue,8)
alloc(areWatchersFucked,8)

registersymbol(omnifyFuckWatchersHook)
registersymbol(watcherHealthValue)
registersymbol(areWatchersFucked)

fuckUpWatchers:
  pushf
  cmp [areWatchersFucked],1
  jne fuckUpWatchersOriginalCode
  movss xmm0,[rax+64]
  ucomiss xmm0,[watcherHealthValue]
  jz depleteHealth
  jmp fuckUpWatchersOriginalCode
depleteHealth:
  xorps xmm0,xmm0
  movss [rax+64],xmm0
fuckUpWatchersOriginalCode:
  popf
  vmovss xmm0,[rax+64]
  jmp fuckUpWatchersReturn


omnifyFuckWatchersHook:
  jmp fuckUpWatchers
fuckUpWatchersReturn:

watcherHealthValue:
  dd (float)90.0
 
areWatchersFucked:
  dd 0

[DISABLE]

{$lua}
function unregister()
  require("Omnified")
  unregisterOmnification()
end

{$asm}

luacall(unregister())

unregistersymbol(checkBadPointer)

dealloc(checkBadPointer)



// Cleanup of omnifyPlayerSpeedValidationDisable4Hook
omnifyPlayerSpeedValidationDisable4Hook:
db C4 C1 78 11 58 70
  
unregistersymbol(omnifyPlayerSpeedValidationDisable4Hook)

dealloc(disablePlayerSpeedValidation4)


// Cleanup of omnifyPlayerSpeedValidationDisable3Hook
omnifyPlayerSpeedValidationDisable3Hook:
db C5 78 11 40 70
  
unregistersymbol(omnifyPlayerSpeedValidationDisable3Hook)

dealloc(disablePlayerSpeedValidation3)


// Cleanup of omnifyPlayerSpeedValidationDisable1Hook
omnifyPlayerSpeedValidationDisable1Hook:
db C5 F8 11 71 70
  
unregistersymbol(omnifyPlayerSpeedValidationDisable1Hook)

dealloc(disablePlayerSpeedValidation1)

// Cleanup of omnifyPlayerSpeedValidationDisable2Hook
omnifyPlayerSpeedValidationDisable2Hook:
db C5 F8 11 48 70
  
unregistersymbol(omnifyPlayerSpeedValidationDisable2Hook)

dealloc(disablePlayerSpeedValidation2)


// Cleanup of omnifyFuckWatchersHook
omnifyFuckWatchersHook:
  db C5 FA 10 40 64
  
unregistersymbol(omnifyFuckWatchersHook)
unregistersymbol(watcherHealthValue)
unregistersymbol(areWatchersFucked)

dealloc(areWatchersFucked)
dealloc(fuckUpWatchers)
dealloc(watcherHealthValue)

// Cleanup of omnifyAbominationHook
omnifyAbominationHook:
db C5 7A 7F 24 0A
  
unregistersymbol(omnifyAbominationHook)

dealloc(baseScalingMatrix)
dealloc(abomnifyCreature)

unregistersymbol(morphScaleData)
unregistersymbol(morphScaleIndex)

dealloc(morphScaleIndex)
dealloc(morphScaleData)

// Cleanup of omnifyScaleMorphHook
omnifyScaleMorphHook:
db C5 F8 10 80 E0 00 00 00
  
unregistersymbol(omnifyScaleMorphHook)
unregistersymbol(abominifyMorphStepsResultUpper)
unregistersymbol(abominifyMorphStepsResultLower)
unregistersymbol(abominifyHeightResultUpper)
unregistersymbol(abominifyHeightResultLower)
unregistersymbol(abominifyWidthResultUpper)
unregistersymbol(abominifyWidthResultLower)
unregistersymbol(abominifyDepthResultUpper)
unregistersymbol(abominifyDepthResultLower)
unregistersymbol(unnaturalBigThreshold)
unregistersymbol(unnaturalBigX)
unregistersymbol(unnaturalSmallX)
unregistersymbol(speedMorphDivisor)
unregistersymbol(speedMorph)
unregistersymbol(stopMorphs)
unregistersymbol(aloyWeaponThiccnessX)
unregistersymbol(forceScrub)

dealloc(aloyWeaponThiccnessX)
dealloc(stopMorphs)
dealloc(speedMorph)
dealloc(speedMorphDivisor)
dealloc(defaultScaleX)
dealloc(abominifyRandomState)
dealloc(abominifyMorphStepsResultUpper)
dealloc(abominifyMorphStepsResultLower)
dealloc(abominifyHeightResultUpper)
dealloc(abominifyHeightResultLower)
dealloc(abominifyWidthResultUpper)
dealloc(abominifyWidthResultLower)
dealloc(abominifyDepthResultUpper)
dealloc(abominifyDepthResultLower)
dealloc(abominifyMorphModeResultUpper)
dealloc(abominifyMorphModeResultLower)
dealloc(unnaturalBigThreshold)
dealloc(unnaturalBigX)
dealloc(unnaturalSmallX)
dealloc(abominifyDivisor)
dealloc(zeroValue)
dealloc(morphScale)
dealloc(forceScrub)

// Cleanup of omnifyApocalypseSystem
omnifyApocalypseSystem:
  db C5 F8 28 BC 24 F0 00 00 00

unregistersymbol(omnifyApocalypseSystem)

dealloc(initiateApocalypse)

// Cleanup of omnifyPredatorHook
omnifyPredatorHook:
db C5 FA 10 44 24 40
  
unregistersymbol(omnifyPredatorHook)

dealloc(identityValue)
dealloc(initiatePredator)


// Cleanup of omnifyPlayerSpeedHook
omnifyPlayerSpeedHook:
db 0F 58 47 70 8B 44 24 38
  
unregistersymbol(omnifyPlayerSpeedHook)
unregistersymbol(playerSpeedX)

dealloc(playerSpeedX)
dealloc(setPlayerSpeed)

// Cleanup of omniPlayerCoordsHook
omniPlayerCoordsHook:
  db C5 FA 10 41 70

unregistersymbol(omniPlayerCoordsHook)
unregistersymbol(playerCoords)

dealloc(playerCoords)
dealloc(getPlayerCoords)

// Cleanup of omniPlayerHook
omniPlayerHook:
  db C5 FA 10 40 64

unregistersymbol(player)
unregistersymbol(playerHealth)
unregistersymbol(omniPlayerHook)

dealloc(player)
dealloc(playerHealth)
dealloc(baseHealthValue)
dealloc(healthNormalizationX)
dealloc(getPlayer)

dealloc(zeroValue)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>322</ID>
          <Description>"Player"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>311</ID>
              <Description>"God Mode"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
playerGodeMode:
  dd 1

[DISABLE]
playerGodMode:
  dd 0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>105</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Health"</Description>
              <VariableType>Float</VariableType>
              <Address>playerHealth</Address>
              <Offsets>
                <Offset>64</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"X"</Description>
              <VariableType>Float</VariableType>
              <Address>playerCoords</Address>
              <Offsets>
                <Offset>70</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Y"</Description>
              <VariableType>Float</VariableType>
              <Address>playerCoords</Address>
              <Offsets>
                <Offset>74</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>12</ID>
              <Description>"Z"</Description>
              <VariableType>Float</VariableType>
              <Address>playerCoords</Address>
              <Offsets>
                <Offset>78</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>291</ID>
              <Description>"Player Damage"</Description>
              <VariableType>Float</VariableType>
              <Address>playerDamageX</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>305</ID>
              <Description>"Player Speed"</Description>
              <VariableType>Float</VariableType>
              <Address>playerSpeedX</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>309</ID>
              <Description>"Fast Omni"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
playerSpeedX:
  dd (float)3.0

[DISABLE]
playerSpeedX:
  dd (float)1.0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>107</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>321</ID>
              <Description>"Buff Damage"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
playerDamageX:
  dd (float)50.0

[DISABLE]
playerDamageX:
  dd (float)1.43
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>99</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>306</ID>
              <Description>"Weapon THICCness"</Description>
              <VariableType>Float</VariableType>
              <Address>aloyWeaponThiccnessX</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>295</ID>
          <Description>"Last Enemy Health"</Description>
          <VariableType>Float</VariableType>
          <Address>lastEnemyHealthValue</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>290</ID>
          <Description>"Enemy Speed"</Description>
          <VariableType>Float</VariableType>
          <Address>enemySpeedX</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>314</ID>
          <Description>"Fuck Watchers"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
areWatchersFucked:
  dd 1

[DISABLE]
areWatchersFucked:
  dd 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>105</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>304</ID>
          <Description>"Stop Abomnification"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
stopMorphs:
  dd 1

[DISABLE]
stopMorphs:
  dd 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>111</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>293</ID>
          <Description>"Wiggle Mode"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(forceWiggleSteps,$1000)
alloc(wiggleMorphSteps,8)
createThread(forceWiggleSteps)

forceWiggleSteps:
  push rax
  push rdx
  sub rsp,10
  movdqu [rsp],xmm0
  mov rax,0
nextForceWiggleStep:
  add rax,#48
  cmp rax,#48000
  je exitForceWiggleStep
  mov rdx,morphScaleData
  add rdx,rax  
  movss xmm0,[wiggleMorphSteps]
  movss [rdx+20],xmm0
  jmp nextForceWiggleStep
exitForceWiggleStep:
  movdqu xmm0,[rsp]
  add rsp,10
  pop rdx
  pop rax
  ret 

wiggleMorphSteps:
  dd (float)4.0		  

abominifyHeightResultUpper:
  dd #1010

abominifyHeightResultLower:
  dd #1000

abominifyWidthResultUpper:
  dd #1150

abominifyWidthResultLower:
  dd #1000

abominifyDepthResultUpper:
  dd #1100

abominifyDepthResultLower:
  dd #1000

[DISABLE]

forceScrub:
  dd 1

dealloc(forceWiggleSteps)
dealloc(wiggleMorphSteps)

abominifyHeightResultUpper:
  dd #1400

abominifyHeightResultLower:
  dd #800

abominifyWidthResultUpper:
  dd #2000

abominifyWidthResultLower:
  dd #600

abominifyDepthResultUpper:
  dd #1400

abominifyDepthResultLower:
  dd #600
  
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>101</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>294</ID>
          <Description>"Conversation Mode"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
abominifyHeightResultUpper:
  dd #1100

abominifyHeightResultLower:
  dd #960

abominifyWidthResultUpper:
  dd #2000

abominifyWidthResultLower:
  dd #600

abominifyDepthResultUpper:
  dd #1400

abominifyDepthResultLower:
  dd #600

[DISABLE]
abominifyHeightResultUpper:
  dd #1400

abominifyHeightResultLower:
  dd #800

abominifyWidthResultUpper:
  dd #2000

abominifyWidthResultLower:
  dd #600

abominifyDepthResultUpper:
  dd #1400

abominifyDepthResultLower:
  dd #600
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>109</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>292</ID>
          <Description>"Speed Morph"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
speedMorph:
  dd 1

[DISABLE]
speedMorph:
  dd 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>106</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>Change of movaps [rdi+70],xmm0</Description>
      <AddressString>HorizonZeroDawn.exe+1780FBE</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>44</Byte>
        <Byte>C7</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>47</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>C1</Byte>
        <Byte>E3</Byte>
        <Byte>06</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [r12+rcx*8+10],xmm2</Description>
      <AddressString>HorizonZeroDawn.exe+7FF473</AddressString>
      <Before>
        <Byte>0C</Byte>
        <Byte>40</Byte>
        <Byte>48</Byte>
        <Byte>03</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>C4</Byte>
        <Byte>C1</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>54</Byte>
        <Byte>CC</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>EF</Byte>
        <Byte>01</Byte>
        <Byte>75</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rdx+rcx+30],xmm10</Description>
      <AddressString>HorizonZeroDawn.exe+7FDFAB</AddressString>
      <Before>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>5C</Byte>
        <Byte>0A</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>54</Byte>
        <Byte>0A</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>38</Byte>
        <Byte>42</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovups [rsi+00000120],xmm0</Description>
      <AddressString>HorizonZeroDawn.exe+C181B1</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>A8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>F8</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>FB</Byte>
        <Byte>11</Byte>
        <Byte>8E</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovss [rbx+70],xmm3</Description>
      <AddressString>HorizonZeroDawn.exe+828CD9</AddressString>
      <Before>
        <Byte>78</Byte>
        <Byte>28</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>11</Byte>
        <Byte>5B</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>2C</Byte>
        <Byte>C3</Byte>
        <Byte>2B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovss [rbx+74],xmm9</Description>
      <AddressString>HorizonZeroDawn.exe+828B4F</AddressString>
      <Before>
        <Byte>C4</Byte>
        <Byte>C1</Byte>
        <Byte>78</Byte>
        <Byte>2F</Byte>
        <Byte>F8</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>11</Byte>
        <Byte>4B</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>76</Byte>
        <Byte>23</Byte>
        <Byte>C5</Byte>
        <Byte>F9</Byte>
        <Byte>6E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovss [rcx+rax-04],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+848A5D</AddressString>
      <Before>
        <Byte>0A</Byte>
        <Byte>C5</Byte>
        <Byte>F2</Byte>
        <Byte>5C</Byte>
        <Byte>CA</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>11</Byte>
        <Byte>4C</Byte>
        <Byte>01</Byte>
        <Byte>FC</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>78</Byte>
        <Byte>2F</Byte>
        <Byte>C1</Byte>
        <Byte>72</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovups [r12],xmm0</Description>
      <AddressString>HorizonZeroDawn.exe+845984</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>60</Byte>
      </Before>
      <Actual>
        <Byte>C4</Byte>
        <Byte>C1</Byte>
        <Byte>78</Byte>
        <Byte>11</Byte>
        <Byte>04</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>C4</Byte>
        <Byte>C1</Byte>
        <Byte>78</Byte>
        <Byte>11</Byte>
        <Byte>0E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovss [r12+r14],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+845A54</AddressString>
      <Before>
        <Byte>C1</Byte>
        <Byte>C5</Byte>
        <Byte>FB</Byte>
        <Byte>5A</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>C4</Byte>
        <Byte>81</Byte>
        <Byte>7A</Byte>
        <Byte>11</Byte>
        <Byte>0C</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>41</Byte>
        <Byte>89</Byte>
        <Byte>06</Byte>
        <Byte>49</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rcx+rdx+30],xmm0</Description>
      <AddressString>HorizonZeroDawn.exe+7FFDBC</AddressString>
      <Before>
        <Byte>D8</Byte>
        <Byte>C5</Byte>
        <Byte>E0</Byte>
        <Byte>58</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>7F</Byte>
        <Byte>44</Byte>
        <Byte>11</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>7F</Byte>
        <Byte>74</Byte>
        <Byte>11</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rdx+rcx+30],xmm10</Description>
      <AddressString>HorizonZeroDawn.exe+80016B</AddressString>
      <Before>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>5C</Byte>
        <Byte>0A</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>54</Byte>
        <Byte>0A</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>38</Byte>
        <Byte>42</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rcx+10],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+CE6289</AddressString>
      <Before>
        <Byte>C5</Byte>
        <Byte>F8</Byte>
        <Byte>10</Byte>
        <Byte>48</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>7F</Byte>
        <Byte>49</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>19</Byte>
        <Byte>C5</Byte>
        <Byte>FC</Byte>
        <Byte>28</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rax+10],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+CD58C3</AddressString>
      <Before>
        <Byte>F0</Byte>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>7F</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>7F</Byte>
        <Byte>48</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>FF</Byte>
        <Byte>C2</Byte>
        <Byte>49</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rdi+38],eax</Description>
      <AddressString>HorizonZeroDawn.exe+807F25</AddressString>
      <Before>
        <Byte>47</Byte>
        <Byte>34</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>38</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>10</Byte>
        <Byte>89</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rdi+48],eax</Description>
      <AddressString>HorizonZeroDawn.exe+807F37</AddressString>
      <Before>
        <Byte>47</Byte>
        <Byte>44</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>50</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovups [rdx+38],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+53ABC8</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>F8</Byte>
        <Byte>11</Byte>
        <Byte>4A</Byte>
        <Byte>38</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>8C</Byte>
        <Byte>24</Byte>
        <Byte>F0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rbp+10],xmm15</Description>
      <AddressString>HorizonZeroDawn.exe+8002B7</AddressString>
      <Before>
        <Byte>78</Byte>
        <Byte>28</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>7D</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>78</Byte>
        <Byte>28</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rcx+r10+10],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+76EE08</AddressString>
      <Before>
        <Byte>C5</Byte>
        <Byte>F8</Byte>
        <Byte>10</Byte>
        <Byte>4A</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>C4</Byte>
        <Byte>A1</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>4C</Byte>
        <Byte>11</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>C4</Byte>
        <Byte>C1</Byte>
        <Byte>78</Byte>
        <Byte>10</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rdi+10],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+BE1799</AddressString>
      <Before>
        <Byte>70</Byte>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>7F</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>7F</Byte>
        <Byte>4F</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>F8</Byte>
        <Byte>10</Byte>
        <Byte>07</Byte>
        <Byte>C5</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne HorizonZeroDawn.exe+3579D1</Description>
      <AddressString>HorizonZeroDawn.exe+357A0F</AddressString>
      <Before>
        <Byte>07</Byte>
        <Byte>FF</Byte>
        <Byte>C3</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>C0</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovsd [rbx+30],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+894590</AddressString>
      <Before>
        <Byte>10</Byte>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FB</Byte>
        <Byte>11</Byte>
        <Byte>4B</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>3B</Byte>
        <Byte>C8</Byte>
        <Byte>74</Byte>
        <Byte>0E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovsd [rax+10],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+442B79</AddressString>
      <Before>
        <Byte>C5</Byte>
        <Byte>FB</Byte>
        <Byte>10</Byte>
        <Byte>4D</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FB</Byte>
        <Byte>11</Byte>
        <Byte>48</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>13</Byte>
        <Byte>8D</Byte>
        <Byte>4A</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rcx+rdx],xmm12</Description>
      <AddressString>7FF794610055</AddressString>
      <Before>
        <Byte>6F</Byte>
        <Byte>04</Byte>
        <Byte>24</Byte>
        <Byte>66</Byte>
        <Byte>9D</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>24</Byte>
        <Byte>11</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>20</Byte>
        <Byte>09</Byte>
        <Byte>87</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rdx+rcx+10],xmm13</Description>
      <AddressString>HorizonZeroDawn.exe+80097F</AddressString>
      <Before>
        <Byte>E9</Byte>
        <Byte>81</Byte>
        <Byte>F6</Byte>
        <Byte>78</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>6C</Byte>
        <Byte>0A</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>5C</Byte>
        <Byte>0A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rdx+rcx+20],xmm11</Description>
      <AddressString>HorizonZeroDawn.exe+800985</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>5C</Byte>
        <Byte>0A</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>54</Byte>
        <Byte>0A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rdx+rcx+30],xmm10</Description>
      <AddressString>HorizonZeroDawn.exe+80098B</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>54</Byte>
        <Byte>0A</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>38</Byte>
        <Byte>42</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovdqu [rdx+rcx],xmm12</Description>
      <AddressString>HorizonZeroDawn.exe+80097A</AddressString>
      <Before>
        <Byte>D8</Byte>
        <Byte>C5</Byte>
        <Byte>60</Byte>
        <Byte>58</Byte>
        <Byte>D1</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>24</Byte>
        <Byte>0A</Byte>
      </Actual>
      <After>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>7F</Byte>
        <Byte>6C</Byte>
        <Byte>0A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovss [rbx+6C],xmm11</Description>
      <AddressString>HorizonZeroDawn.exe+82953F</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>45</Byte>
        <Byte>84</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>7A</Byte>
        <Byte>11</Byte>
        <Byte>5B</Byte>
        <Byte>6C</Byte>
      </Actual>
      <After>
        <Byte>C4</Byte>
        <Byte>41</Byte>
        <Byte>78</Byte>
        <Byte>28</Byte>
        <Byte>5B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovsd [rcx+000000D8],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+C0DC9F</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FB</Byte>
        <Byte>11</Byte>
        <Byte>89</Byte>
        <Byte>D8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>81</Byte>
        <Byte>C1</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovss [rdx+rbx*8+0C],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+A5CB55</AddressString>
      <Before>
        <Byte>FA</Byte>
        <Byte>11</Byte>
        <Byte>54</Byte>
        <Byte>DA</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>FA</Byte>
        <Byte>11</Byte>
        <Byte>4C</Byte>
        <Byte>DA</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>30</Byte>
        <Byte>3B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovups [rax+70],xmm8</Description>
      <AddressString>HorizonZeroDawn.exe+67E90B</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>40</Byte>
        <Byte>32</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>78</Byte>
        <Byte>11</Byte>
        <Byte>40</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>1F</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovups [rcx+70],xmm6</Description>
      <AddressString>HorizonZeroDawn.exe+676B8F</AddressString>
      <Before>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>64</Byte>
        <Byte>24</Byte>
        <Byte>78</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>F8</Byte>
        <Byte>11</Byte>
        <Byte>71</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
        <Byte>E8</Byte>
        <Byte>34</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovups [rax+70],xmm1</Description>
      <AddressString>HorizonZeroDawn.exe+676C19</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>80</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C5</Byte>
        <Byte>F8</Byte>
        <Byte>11</Byte>
        <Byte>48</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>8B</Byte>
        <Byte>B6</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of vmovups [r8+70],xmm3</Description>
      <AddressString>HorizonZeroDawn.exe+67A854</AddressString>
      <Before>
        <Byte>E3</Byte>
        <Byte>61</Byte>
        <Byte>21</Byte>
        <Byte>DA</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>C4</Byte>
        <Byte>C1</Byte>
        <Byte>78</Byte>
        <Byte>11</Byte>
        <Byte>58</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>89</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <LuaScript>getAutoAttachList().add("HorizonZeroDawn.exe")
</LuaScript>
</CheatTable>
