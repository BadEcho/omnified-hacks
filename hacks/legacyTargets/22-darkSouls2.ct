<!--
    Omnified Dark Souls II
    Written By: Matt Weber (https://badecho.com) (https://twitch.tv/omni)
    Copyright 2022 Bad Echo LLC

    Bad Echo Technologies are licensed under a
    Creative Commons Attribution-NonCommercial 4.0 International License.

    See accompanying file LICENSE.md or a copy at:
    http://creativecommons.org/licenses/by-nc/4.0/
-->
<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="31">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"OMNIFY"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
 Omnified Dark Souls II
 Written By: Matt Weber
 Copyright 2020 Bad Echo LLC

 Visit my hackpad for my information on what I do:
 https://badecho.com

 Catch my live streams on my official Twitch channel:
 https://twitch.tv/omni
}

[ENABLE]

{$lua}

function register()
  require("Omnified")
  registerOmnification()
end

function mark()
  local currentX = readFloat("[playerCoords]+1C0")
  local currentY = readFloat("[playerCoords]+1C4")
  local currentZ = readFloat("[playerCoords]+1C8")
  
  if currentX ~= nil and currentY ~= nil and currentZ ~= nil then
	writeFloat("teleportX",currentX)
	writeFloat("teleportY",currentY)
	writeFloat("teleportZ",currentZ)
  end
end

function recall()
  writeInteger("teleport",1)
end

createHotkey(mark, VK_NUMPAD4)
createHotkey(recall, VK_NUMPAD5)

{$asm}
luacall(register())

alloc(checkBadPointer,$1000)

registersymbol(checkBadPointer)

checkBadPointer:
  sub rsp,10
  movdqu [rsp],xmm0
  sub rsp,10
  movdqu [rsp],xmm1
  sub rsp,10
  movdqu [rsp],xmm2
  sub rsp,10
  movdqu [rsp],xmm3
  sub rsp,10
  movdqu [rsp],xmm4
  sub rsp,10
  movdqu [rsp],xmm5
  push rax
  push rdx
  push r8
  push r9
  push rbp
  mov rbp,rsp
  and spl,F0
  sub rsp,20
  mov edx,4
  call isBadReadPtr
  mov rcx,eax
  mov rsp,rbp
  pop rbp
  pop r9
  pop r8
  pop rdx
  pop rax
  movdqu xmm5,[rsp]
  add rsp,10
  movdqu xmm4,[rsp]
  add rsp,10
  movdqu xmm3,[rsp]
  add rsp,10
  movdqu xmm2,[rsp]
  add rsp,10
  movdqu xmm1,[rsp]
  add rsp,10
  movdqu xmm0,[rsp]
  add rsp,10
  ret

// Gets the root player struct.
define(omniPlayerHook,"DarkSoulsII.exe"+269A72)

assert(omniPlayerHook, 39 81 68 01 00 00)
alloc(getPlayer,$1000, omniPlayerHook)
alloc(player,8)
alloc(playerCoords,8)
alloc(playerSouls,8)
alloc(teleport,8)
alloc(teleportX,8)
alloc(teleportY,8)
alloc(teleportZ,8)

registersymbol(omniPlayerHook)
registersymbol(playerCoords)
registersymbol(playerSouls)
registersymbol(player)
registersymbol(teleport)
registersymbol(teleportX)
registersymbol(teleportY)
registersymbol(teleportZ)

getPlayer:
  pushf
  mov [player],rcx  
  push rax
  push rbx
  mov rax,[rcx+490]
  mov [playerSouls],rax
  mov rax,[rcx+100]
  mov rbx,[rax+40]
  mov rax,[rbx+1D0]
  mov rbx,[rax+20]
  mov [playerCoords],rbx
  cmp [teleport],1
  jne getPlayerExit
  sub rsp,10
  movdqu [rsp],xmm0
  movss xmm0,[teleportX]
  movss [rbx+1C0],xmm0
  movss xmm0,[teleportY]
  movss [rbx+1C4],xmm0
  movss xmm0,[teleportZ]
  movss [rbx+1C8],xmm0
  mov [teleport],0
  movdqu xmm0,[rsp]
  add rsp,10
getPlayerExit:
  pop rbx
  pop rax  
getPlayerOriginalCode:
  popf
  cmp [rcx+00000168],eax
  jmp getPlayerReturn


omniPlayerHook:
  jmp getPlayer
  nop 
getPlayerReturn:


teleport:
  dd 0
  
teleportX:
  dd (float)0.0
  
teleportY:
  dd (float)0.0
  
teleportZ:
  dd (float)0.0

// Initiates the Apocalypse system.
define(omnifyApocalypseHook,"DarkSoulsII.exe"+16724F)

assert(omnifyApocalypseHook, 2B CE 89 4C 24 30)
alloc(initiateApocalypse,$1000, omnifyApocalypseHook)
alloc(disableEnemyApocalypse,8)
alloc(disableSmelterFire,8)

registersymbol(omnifyApocalypseHook)
registersymbol(disableEnemyApocalypse)
registersymbol(disableSmelterFire)

initiateApocalypse:
  pushf
  cmp r9,0x62
  je initiateApocalypseOriginalCode
  cmp [disableSmelterFire],1
  jne initiateApocalypseContinue
  cmp esi,17
  jle initiateApocalypseOriginalCode
initiateApocalypseContinue:
  sub rsp,10
  movdqu [rsp],xmm0
  sub rsp,10
  movdqu [rsp],xmm1
  sub rsp,10
  movdqu [rsp],xmm2
  push rax
  push rbx
  cvtsi2ss xmm0,esi
  cvtsi2ss xmm1,ecx
  push rcx
  mov rcx,player
  mov rax,[rcx]
  mov ecx,[rax+174]
  cvtsi2ss xmm2,ecx
  cmp rax,rbx
  pop rcx
  jne initiateEnemyApocalypse
  push rcx
  mov rcx,player
  mov rax,[rcx]
  cmp rax,r13
  pop rcx
  je intiateApocalypseCleanup
initiatePlayerApocalypse:
  mov rax,playerCoords
  mov rbx,[rax]
  lea rax,[rbx+1C0]
  sub rsp,8
  movd [rsp],xmm0
  sub rsp,8
  movd [rsp],xmm1
  sub rsp,8
  movd [rsp],xmm2
  push rax
  call executePlayerApocalypse
  jmp initiateApocalypseExit  
initiateEnemyApocalypse:
  cmp [disableEnemyApocalypse],1
  je skipEnemyApocalypse  
  sub rsp,8
  movd [rsp],xmm0
  sub rsp,8
  movd [rsp],xmm1
  call executeEnemyApocalypse
  jmp initiateApocalypseExit
skipEnemyApocalypse:
  cvtsi2ss xmm0,esi
  movd eax,xmm0
  cvtsi2ss xmm0,ecx
  movd ebx,xmm0
initiateApocalypseExit:
  movd xmm0,eax
  cvtss2si esi,xmm0
  movd xmm0,ebx
  cvtss2si ecx,xmm0
intiateApocalypseCleanup:
  pop rbx
  pop rax
  movdqu xmm2,[rsp]
  add rsp,10
  movdqu xmm1,[rsp]
  add rsp,10
  movdqu xmm0,[rsp]
  add rsp,10
initiateApocalypseOriginalCode:
  popf
  sub ecx,esi
  mov [rsp+30],ecx
  jmp initiateApocalypseReturn


omnifyApocalypseHook:
  jmp initiateApocalypse
  nop 
initiateApocalypseReturn:


disableEnemyApocalypse:
  dd 0
  
disableSmelterFire:
  dd 0


// Initiates the Predator system.
define(omnifyPredatorHook,"DarkSoulsII.exe"+71168E)

assert(omnifyPredatorHook, 0F 58 47 70 45 0F C6 DB 00)
alloc(initiatePredator,$1000, omnifyPredatorHook)
alloc(identityValue,8)
alloc(playerSpeedX,8)

registersymbol(omnifyPredatorHook)
registersymbol(playerSpeedX)

initiatePredator:
  pushf
  push rax
  mov rax,playerCoords
  cmp [rax],0
  pop rax
  je initiatePredatorOriginalCode
  push rax
  push rbx
  mov rax,playerCoords
  mov rbx,[rax]
  add rbx,0x150
  cmp rbx,rdi
  pop rbx
  pop rax
  je fuckPlayerSpeed
  push rax
  mov rax,[rdi]
  cmp ax,0xDF68
  pop rax
  jne initiatePredatorOriginalCode
  sub rsp,10
  movdqu [rsp],xmm1
  sub rsp,10
  movdqu [rsp],xmm2
  push rax
  push rbx
  push rcx
  movss xmm1,[identityValue]
  shufps xmm1,xmm1,0
  mov rax,playerCoords
  mov rbx,[rax]
  push [rbx+1C0]
  push [rbx+1C8]
  push [rdi+70]
  push [rdi+78]
  sub rsp,10
  movdqu [rsp],xmm1
  movhlps xmm2,xmm0
  sub rsp,8
  movq [rsp],xmm0
  sub rsp,8
  movq [rsp],xmm2
  call executePredator
  sub rsp,10
  xorps xmm2,xmm2
  movups [rsp],xmm0
  mov [rsp],eax
  mov [rsp+4],ebx
  mov [rsp+8],ecx
  movups xmm0,[rsp]
  add rsp,10
  pop rcx
  pop rbx
  pop rax
  movdqu xmm2,[rsp]
  add rsp,10
  movdqu xmm1,[rsp]
  add rsp,10
  jmp initiatePredatorOriginalCode
fuckPlayerSpeed:
  sub rsp,10
  movdqu [rsp],xmm1
  sub rsp,10
  movss xmm1,[playerSpeedX]
  shufps xmm1,xmm1,0
  movups [rsp],xmm1
  movss xmm1,[identityValue]
  movd [rsp+4],xmm1
  movd [rsp+C],xmm1
  movups xmm1,[rsp]
  add rsp,10
  mulps xmm0,xmm1
  movdqu xmm1,[rsp]
  add rsp,10
initiatePredatorOriginalCode:
  popf
  addps xmm0,[rdi+70]
  shufps xmm11,xmm11,00
  jmp initiatePredatorReturn


omnifyPredatorHook:
  jmp initiatePredator
initiatePredatorReturn:

identityValue:
  dd (float)1.0
  
playerSpeedX:
  dd (float)1.0

alloc(morphScaleData,4800)
alloc(morphScaleIndex,8)
  
registersymbol(morphScaleData)
registersymbol(morphScaleIndex)

morphScaleIndex:
  dd 0

// Performs morphing on creatures' scales.
define(omnifyScaleMorphHook,"DarkSoulsII.exe"+BCB4AA)

assert(omnifyScaleMorphHook, 0F 28 80 A0 01 00 00)
alloc(morphScale,$1000, omnifyScaleMorphHook)
alloc(abominifyRandomState,8)
alloc(abominifyMorphStepsResultUpper,8)
alloc(abominifyMorphStepsResultLower,8)
alloc(abominifyHeightResultUpper,8)
alloc(abominifyHeightResultLower,8)
alloc(abominifyWidthResultUpper,8)
alloc(abominifyWidthResultLower,8)
alloc(abominifyDepthResultUpper,8)
alloc(abominifyDepthResultLower,8)
alloc(abominifyMorphModeResultUpper,8)
alloc(abominifyMorphModeResultLower,8)
alloc(unnaturalBigThreshold,8)
alloc(unnaturalBigX,8)
alloc(unnaturalSmallX,8)
alloc(abominifyDivisor,8)
alloc(defaultScaleX,8)
alloc(speedMorph,8)
alloc(speedMorphDivisor,8)
alloc(stopMorphs,8)
alloc(zeroValue,8)

registersymbol(omnifyScaleMorphHook)
registersymbol(abominifyMorphStepsResultUpper)
registersymbol(abominifyMorphStepsResultLower)
registersymbol(abominifyHeightResultUpper)
registersymbol(abominifyHeightResultLower)
registersymbol(abominifyWidthResultUpper)
registersymbol(abominifyWidthResultLower)
registersymbol(abominifyDepthResultUpper)
registersymbol(abominifyDepthResultLower)
registersymbol(unnaturalBigThreshold)
registersymbol(unnaturalBigX)
registersymbol(speedMorphDivisor)
registersymbol(unnaturalSmallX)
registersymbol(speedMorph)
registersymbol(stopMorphs)

morphScale:
  pushf
  push rax
  mov rax,player
  cmp [rax],0
  pop rax
  je morphScaleOriginalCode
  push rbx
  mov rbx,playerCoords
  cmp rax,[rbx]
  pop rbx
  je morphScaleOriginalCode
  push rbx
  push rcx  
  push rdx
  mov rbx,rax
  cmp [rbx+1FC],0
  jne applyMorphScaleFromData  
checkMorphDataIndexLimit:
  cmp [morphScaleIndex],#99
  jne incrementMorphDataIndex
  mov [morphScaleIndex],0
  push rax
  mov rax,0
nextMorphDataScrub:
  add rax,#48
  cmp rax,#4800
  je exitMorphDataScrub
  mov rdx,morphScaleData
  add rdx,rax
  mov [rdx],0
  mov [rdx+4],0
  mov [rdx+8],0
  mov [rdx+C],0
  mov [rdx+10],0
  mov [rdx+14],0
  mov [rdx+18],0
  mov [rdx+1C],0
  mov [rdx+20],0
  mov [rdx+24],0
  mov [rdx+28],0
  mov [rdx+2C],0
  jmp nextMorphDataScrub
exitMorphDataScrub:
  pop rax
incrementMorphDataIndex:
  inc [morphScaleIndex]
  mov rcx,[morphScaleIndex]
  mov [rbx+1FC],rcx
applyMorphScaleFromData:
  mov rdx,morphScaleData
  mov rcx,[rbx+1FC]   
  push rax  
  push rdx
  mov rax,rcx
  mov rcx,#48
  mul rcx
  mov rcx,rax  
  pop rdx
  pop rax
  add rdx,rcx  
  cmp [rdx],0
  je generateNewMorphTargets
  cmp [stopMorphs],1
  je morphScaleExit
  dec [rdx]
  jmp stepMorph
generateNewMorphTargets:
  sub rsp,10
  movdqu [rsp],xmm0
  movss xmm0,[rdx+4]
  push rax
  mov rax,zeroValue
  ucomiss xmm0,[rax]
  pop rax
  ja skipInitializeDefaultScales
  movss xmm0,[defaultScaleX]
  movss [rdx+4],xmm0
  movss [rdx+8],xmm0
  movss [rdx+C],xmm0
skipInitializeDefaultScales:
  movss [rdx+14],xmm0
  movss xmm0,[rdx+8]
  movss [rdx+18],xmm0
  movss xmm0,[rdx+C]
  movss [rdx+1C],xmm0
  push rax
  cmp [rdx+10],1
  je generateNewMorphTargetsExit
  movss xmm0,[rdx+20]
  mov rax,zeroValue
  ucomiss xmm0,[rax]
  ja skipGenerateMorphSteps
  push [abominifyMorphStepsResultLower]
  push [abominifyMorphStepsResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  cvtsi2ss xmm0,eax
  movss [rdx+20],xmm0
skipGenerateMorphSteps:
  movss xmm0,[rdx+20]
  cmp [speedMorph],1
  jne generateMonsterMorphTargets
  divss xmm0,[speedMorphDivisor]  
generateMonsterMorphTargets:  
  cvtss2si eax,xmm0
  mov [rdx],eax
  push [abominifyHeightResultLower]
  push [abominifyHeightResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  cvtsi2ss xmm0,eax
  divss xmm0,[abominifyDivisor]
  movss [rdx+28],xmm0
  cmp [rdx+10],0
  jne skipGenerateMorphMode
  push [abominifyMorphModeResultLower]
  push [abominifyMorphModeResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  jmp applyMorphMode
skipGenerateMorphMode:
  mov eax,[rdx+10]
applyMorphMode:
  cmp eax,1
  je staticUnnaturalMorphing
  cmp eax,5
  jle uniformMorphing
  jmp nonUniformMorphing
staticUnnaturalMorphing:
  mov [rdx+10],1
  ucomiss xmm0,[unnaturalBigThreshold]
  ja unnaturalBiggify
  mulss xmm0,[unnaturalSmallX]
  jmp unnaturalizeIt
unnaturalBiggify:
  mulss xmm0,[unnaturalBigX]
unnaturalizeIt:
  movss [rdx+4],xmm0
  movss [rdx+8],xmm0
  movss [rdx+C],xmm0
  jmp generateNewMorphTargetsExit
uniformMorphing:
  mov [rdx+10],5
  movss [rdx+28],xmm0
  movss [rdx+2C],xmm0
  jmp generateNewMorphTargetsExit
nonUniformMorphing:
  mov [rdx+10],8  
  push [abominifyWidthResultLower]
  push [abominifyWidthResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  cvtsi2ss xmm0,eax
  divss xmm0,[abominifyDivisor]
  movss [rdx+24],xmm0
  push [abominifyDepthResultLower]
  push [abominifyDepthResultUpper]
  mov rax,abominifyRandomState
  push rax
  call generateRandomNumber
  cvtsi2ss xmm0,eax
  divss xmm0,[abominifyDivisor]
  movss [rdx+2C],xmm0
generateNewMorphTargetsExit:
  pop rax
  movdqu xmm0,[rsp]
  add rsp,10
  jmp morphScaleExit
stepMorph:
  cmp [rdx+10],1
  je morphScaleExit
  sub rsp,10
  movdqu [rsp],xmm0
  sub rsp,10
  movdqu [rsp],xmm1
  push rax
  push rsi
  movss xmm0,[rdx+20]
  cmp [speedMorph],1
  jne generateMorphsForStep
  divss xmm0,[speedMorphDivisor]  
generateMorphsForStep:
  cvtss2si eax,xmm0
  mov esi,[rdx]
  sub eax,esi
  cvtsi2ss xmm1,eax
  divss xmm1,xmm0 //[rdx+20]
  // Width Step
  movss xmm0,[rdx+24]
  subss xmm0,[rdx+14]
  mulss xmm0,xmm1
  addss xmm0,[rdx+14]
  movss [rdx+4],xmm0
  // Height Step
  movss xmm0,[rdx+28]
  subss xmm0,[rdx+18]
  mulss xmm0,xmm1
  addss xmm0,[rdx+18]
  movss [rdx+8],xmm0
  // Depth Step
  movss xmm0,[rdx+2C]
  subss xmm0,[rdx+1C]
  mulss xmm0,xmm1
  addss xmm0,[rdx+1C]
  movss [rdx+C],xmm0
  pop rsi
  pop rax
  movdqu xmm1,[rsp]
  add rsp,10
  movdqu xmm0,[rsp]
  add rsp,10
morphScaleExit:  
  pop rdx
  pop rcx
  pop rbx
morphScaleOriginalCode:
  popf
  movaps xmm0,[rax+000001A0]
  jmp morphScaleReturn


omnifyScaleMorphHook:
  jmp morphScale
  nop 2
morphScaleReturn:

abominifyRandomState:
  dd 0

abominifyMorphStepsResultUpper:
  dd #550

abominifyMorphStepsResultLower:
  dd #25

abominifyHeightResultUpper:
  dd #235

abominifyHeightResultLower:
  dd #25

abominifyWidthResultUpper:
  dd #275

abominifyWidthResultLower:
  dd #25

abominifyDepthResultUpper:
  dd #300

abominifyDepthResultLower:
  dd #25

abominifyMorphModeResultUpper:
  dd #13

abominifyMorphModeResultLower:
  dd 1

abominifyDivisor:
  dd (float)100.0

unnaturalBigThreshold:
  dd (float)1.0

unnaturalSmallX:
  dd (float)0.5

unnaturalBigX:
  dd (float)1.5

stopMorphs:
  dd 0
  
speedMorph:
  dd 0
  
speedMorphDivisor:
  dd (float)4.0

defaultScaleX:
  dd (float)1.0

zeroValue:
  dd 0	

// Applies the Abomnification system.
// xmm1 : width
// xmm0: height
// xmm7: depth
// rbx -&gt; 3A0 -&gt; 78 (charctrl)
//  -&gt; 3A0 -&gt; 60 -&gt; 8
// when 3a0 no work, then rbx-&gt;240-&gt;188 (ctrl)
define(omnifyAbominationHook,"DarkSoulsII.exe"+AEDFA1)

assert(omnifyAbominationHook, 66 0F 7F 0A 0F 59 FE)
alloc(abomnifyCreature,$1000, omnifyAbominationHook)
alloc(abomnify,8)

registersymbol(omnifyAbominationHook)
registersymbol(abomnify)

abomnifyCreature:
  pushf
  cmp [abomnify],1
  jne abomnifyCreatureOriginalCode
  push rax
  mov rax,player
  cmp [rax],0
  pop rax
  je abomnifyCreatureOriginalCode
  cmp rbx,#10000
  jle abomnifyCreatureOriginalCode
  push rax
  mov rax,rbx
  shr rax,24
  cmp rax,0x7FF
  jne abomnifyCreatureExit
  mov rax,[rbx]
  cmp ax,0x3620
  jne abomnifyCreatureExit
  mov rax,[rbx+3A0]
  shr rax,24
  cmp rax,0x7FF
  jne abomnifyCreatureCheckAlternative  
  push rcx
  mov rax,[rbx+3A0]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx
  jne abomnifyCreatureCheckAlternative
  push rcx
  mov rax,[rbx+3A0]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0x7A90
  pop rcx
  jne abomnifyCreatureCheckAlternative
  push rcx
  mov rax,[rbx+3A0]
  mov rcx,[rax+60]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  jne abomnifyCreatureCheckAlternative
  push rcx
  mov rax,[rbx+3A0]
  mov rcx,[rax+60]
  mov rax,[rcx]
  cmp ax,0x7A38
  pop rcx
  jne abomnifyCreatureCheckAlternative
  push rcx
  mov rcx,[rbx+3A0]
  mov rax,[rcx+60]
  mov rcx,[rax+8]
  mov rax,player
  cmp [rax],rcx
  pop rcx
  je abomnifyCreatureExit 
  push rbx
  push rdx  
  mov rdx,[rbx+3A0]
  mov rbx,[rdx+60]
  mov rax,[rbx+8]  
  pop rdx
  pop rbx
  jmp abomnifyIt
abomnifyCreatureCheckAlternative:
  mov rax,[rbx+240]
  shr rax,24
  cmp rax,0x7FF
  jne abomnifyCreatureCheckSecondAlternative  
  push rcx
  mov rax,[rbx+240]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx
  jne abomnifyCreatureCheckSecondAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0x5180
  pop rcx
  jne abomnifyCreatureCheckSecondAlternative
   push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+188]
  shr rax,20
  cmp rax,0x7FF4
  pop rcx
  jne abomnifyCreatureCheckSecondAlternative  
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+188]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx
  jne abomnifyCreatureCheckSecondAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+188]
  mov rax,[rcx]
  cmp ax,0x71E8
  pop rcx
  jne abomnifyCreatureCheckSecondAlternative  
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+188]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCreatureCheckSecondAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+188]
  mov rax,player
  cmp [rax],rcx
  pop rcx
  je abomnifyCreatureExit
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+188]
  pop rcx
  jmp abomnifyIt
  // crashing here, add pointer check
abomnifyCreatureCheckSecondAlternative:
  jmp abomnifyCheckThirdAlternative
  mov rax,[rbx+240]
  shr rax,24
  cmp rax,0x7FF
  jne abomnifyCheckThirdAlternative  
  push rcx
  mov rax,[rbx+240]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx
  jne abomnifyCheckThirdAlternative  
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0x5180
  pop rcx
  jne abomnifyCheckThirdAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+248]
  shr rcx,20
  cmp rcx,0x7FF4
  pop rcx
  jne abomnifyCheckThirdAlternative  
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+248]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx   
  jne abomnifyCheckThirdAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+248]
  mov rax,[rcx]
  cmp ax,0x71E8
  pop rcx
  jne abomnifyCheckThirdAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+248]
  mov rax,player
  cmp [rax],rcx
  pop rcx
  je abomnifyCreatureExit
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+248]
  pop rcx
  jmp abomnifyIt
abomnifyCheckThirdAlternative:
  //jmp abomnifyCheckFourthAlternative
  mov rax,[rbx+240]
  shr rax,24
  cmp rax,0x7FF
  jne abomnifyCheckFourthAlternative
  push rcx
  mov rax,[rbx+240]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx   
  jne abomnifyCheckFourthAlternative  
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0x5180
  pop rcx
  jne abomnifyCheckFourthAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+40]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  jne abomnifyCheckFourthAlternative  
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+40]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCheckFourthAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+40]
  mov rax,[rcx]
  cmp ax,0x71E8
  pop rcx
  jne abomnifyCheckFourthAlternative
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+40]
  pop rcx
  jmp abomnifyIt
abomnifyCheckFourthAlternative:
// char helm bug remove if needed
//jmp abomnifyCheckFifthAlternative
  push rcx
  mov rcx,[rbx+388]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  jne abomnifyCheckFifthAlternative  
  push rcx
  mov rax,[rbx+388]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx
  jne abomnifyCheckFifthAlternative
  push rcx
  mov rcx,[rbx+388]
  mov rax,[rcx]
  cmp ax,0xCB78
  pop rcx
  jne abomnifyCheckFifthAlternative
  push rcx
  mov rax,[rbx+388]
  mov rcx,player
  cmp [rcx],rax
  pop rcx
  je abomnifyCreatureExit
  jmp abomnifyIt
abomnifyCheckFifthAlternative:
  //jmp abomnifyCheckSixthAlternative
  mov rax,[rbx+240]
  shr rax,24
  cmp rax,0x7FF
  jne abomnifyCheckSixthAlternative
  push rcx
  mov rax,[rbx+240]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCheckSixthAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0x5180
  pop rcx
  jne abomnifyCheckSixthAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+148]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  jne abomnifyCheckSixthAlternative
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+148]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCheckSixthAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+148]
  mov rax,[rcx]
  cmp ax,0xCB78
  pop rcx
  jne abomnifyCheckSixthAlternative
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+148]
  mov rax,rcx
  mov rcx,player
  cmp [rcx],rax
  pop rcx
  je abomnifyCreatureExit
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+148]
  pop rcx
  jmp abomnifyIt
abomnifyCheckSixthAlternative:    
  //jmp abomnifyCheckSixFive
  mov rax,[rbx+240]
  shr rax,24
  cmp rax,0x7FF
  jne abomnifyCheckSixFive
  push rcx
  mov rax,[rbx+240]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCheckSixFive
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0x5180
  pop rcx
  jne abomnifyCheckSixFive
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+48]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  jne abomnifyCheckSixFive
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+48]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCheckSixFive
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+48]
  mov rax,[rcx]
  cmp ax,0xCB78
  pop rcx
  jne abomnifyCheckSixFive
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+48]
  mov rax,rcx
  mov rcx,player
  cmp [rcx],rax
  pop rcx
  je abomnifyCreatureExit
  push rcx 
  mov rcx,[rbx+240]
  mov rax,[rcx+48]
  pop rcx
  jmp abomnifyIt
abomnifyCheckSixFive:  
// causes player face to disappear, maybe don't use
//jmp abomnifyCheckSeventh
  mov rax,[rbx+240]
  shr rax,24
  cmp rax,0x7FF
  jne abomnifyCheckSeventh  
  push rcx
  mov rax,[rbx+240]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCheckSeventh
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0x5180
  pop rcx
  jne abomnifyCheckSeventh
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+88]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  jne abomnifyCheckSeventh  
  push rcx
  mov rax,[rbx+240]
  lea rcx,[rax+88]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCheckSeventh
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+88]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyCheckSeventh
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+88]
  mov rax,[rcx]
  cmp ax,0xCB78
  pop rcx
  jne abomnifyCheckSeventh      
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+88]
  mov rax,rcx
  mov rcx,player
  cmp [rcx],rax
  pop rcx
  je abomnifyCreatureExit
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+88]
  pop rcx
  jmp abomnifyIt  
abomnifyCheckSeventh:
  //jmp abomCheckEight
  mov rax,[rbx+300]
  shr rax,24
  cmp rax,0x7FF
  jne abomCheckEight  
  push rcx
  mov rax,[rbx+300]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomCheckEight  
  push rcx
  mov rcx,[rbx+300]
  mov rax,[rcx]
  cmp ax,0x9468
  pop rcx
  jne abomCheckEight
  push rcx
  mov rax,[rbx+300]
  mov rcx,[rax+8]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  jne abomCheckEight
  push rcx
  mov rax,[rbx+300]
  mov rcx,[rax+8]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  push rcx
  mov rcx,[rbx+300]
  mov rax,[rcx+8]  
  lea rcx,[rax+20]
  call checkBadPointer
  cmp ecx,0
  pop rcx 
  jne abomCheckEight
  push rcx
  mov rax,[rbx+300]
  mov rcx,[rax+8]
  mov rax,[rcx+20]
  shr rax,24
  cmp rax,0x7FF
  pop rcx
  jne abomCheckEight
  push rcx
  mov rax,[rbx+300]
  mov rcx,[rax+8]
  mov rax,[rcx+20]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0xCB78
  pop rcx
  jne abomCheckEight  
  push rcx
  mov rax,[rbx+300]
  mov rcx,[rax+8]
  mov rax,[rcx+20]
  mov rcx,player
  cmp [rcx],rax
  pop rcx
  je abomnifyCreatureExit
  push rcx
  mov rax,[rbx+300]
  mov rcx,[rax+8]
  mov rax,[rcx+20]
  pop rcx
  jmp abomnifyIt
abomCheckEight:
  //jmp abomCheckNine
        mov rax,[rbx+240]
  shr rax,24
  cmp rax,0x7FF
  jne abomCheckNine
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax]
  mov rax,rcx
  cmp ax,0x5180
  pop rcx
  jne abomCheckNine 
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+808]
  shr rcx,24
  cmp rcx,0x7FF
  pop rcx
  jne abomCheckNine  
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+808]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomCheckNine
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+808]
  mov rax,[rcx]
  cmp ax,0xCB78
  pop rcx
  jne abomCheckNine
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+808]
  mov rax,[rcx+100]
  shr rax,24
  cmp rax,0x7FF
  pop rcx
  jne abomCheckNine
  push rcx
  mov rax,[rbx+240]
  mov rcx,[rax+808]
  mov rax,rcx
  mov rcx,player
  cmp [rcx],rax
  pop rcx
  je abomnifyCreatureExit
  push rcx
  mov rcx,[rbx+240]
  mov rax,[rcx+808]
  pop rcx
  jmp abomnifyIt
abomCheckNine:  
  //jmp abomCheckTen
  mov rax,[rbx+3B0]
  shr rax,24
  cmp ax,0x7FF
  jne abomCheckTen
  push rcx
  mov rax,[rbx+3B0]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomCheckTen
  push rcx
  mov rcx,[rbx+3B0]
  mov rax,[rcx]
  cmp ax,0xCB78
  pop rcx
  jne abomCheckTen
  push rcx
  mov rax,[rbx+3B0]
  mov rcx,player
  cmp [rcx],rax
  pop rcx
  je abomnifyCreatureExit
  mov rax,[rbx+3B0]
  jmp abomnifyIt
abomCheckTen:
  //jmp abomdump
  mov rax,[rbx+1E70]
  shr rax,24
  cmp ax,0x7FF
  jne abomdump
  push rcx
  mov rax,[rbx+1E70]
  lea rcx,[rax]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomdump
  push rcx
  mov rcx,[rbx+1E70]
  mov rax,[rcx]
  cmp ax,0xCB78
  pop rcx
  jne abomdump
  push rcx
  mov rax,[rbx+1E70]
  mov rcx,player
  cmp [rcx],rax
  pop rcx
  je abomnifyCreatureExit
  mov rax,[rbx+1E70]
  jmp abomnifyIt
abomnifyIt:
  push rbx
  push rcx
  push rdx  
  sub rsp,10
  movdqu [rsp],xmm4
  sub rsp,10
  movdqu [rsp],xmm5 
  mov rbx,[rax+100]
  push rcx
  lea rcx,[rbx+10]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyScaleCreatureExit
  mov rcx,[rbx+10]  
  push rcx
  mov rax,rcx
  lea rcx,[rax+10]
  call checkBadPointer
  cmp ecx,0
  pop rcx
  jne abomnifyScaleCreatureExit
  mov rbx,[rcx+10]  
  push rcx
  mov rax,rcx
  lea rcx,[rbx+1D0]
  call checkBadPointer
  cmp ecx,0
  pop rcx  
  jne abomnifyScaleCreatureExit
  mov rdx,[rbx+1D0]
  mov rbx,[rdx+20]
  mov rcx,[rbx+1FC]
  cmp rcx,0
  je abomnifyScaleCreatureExit
  push rax
  mov rax,rcx
  mov rcx,#48
  mul rcx
  mov rcx,rax
  pop rax
  mov rdx,morphScaleData
  add rdx,rcx  
  mov rbx,[rdx+4]
  cmp rbx,0
  je abomnifyScaleCreatureExit
  movdqu xmm5,xmm1
  movss xmm4,[rdx+4]
  shufps xmm4,xmm4,0
  mulps xmm5,xmm4
  movdqu xmm1,xmm5
  
  movdqu xmm5,xmm0  
  movss xmm4,[rdx+8]
  shufps xmm4,xmm4,0
  mulps xmm5,xmm4
  movdqu xmm0,xmm5
  
  movdqu xmm5,xmm7
  movss xmm4,[rdx+C]
  shufps xmm4,xmm4,0
  mulps xmm5,xmm4
  movdqu xmm7,xmm5
abomnifyScaleCreatureExit:
  movdqu xmm5,[rsp]
  add rsp,10
  movdqu xmm4,[rsp]
  add rsp,10
  pop rdx
  pop rcx
  pop rbx
  jmp abomnifyCreatureExit
abomdump:
  nop
abomnifyCreatureExit:
  pop rax
abomnifyCreatureOriginalCode:
  popf
  movdqa [rdx],xmm1
  mulps xmm7,xmm6
  jmp abomnifyCreatureReturn


omnifyAbominationHook:
  jmp abomnifyCreature
  nop 2
abomnifyCreatureReturn:

abomnify:
  dd 1

[DISABLE]

{$lua}
function unregister()
  require("Omnified")
  unregisterOmnification()
end

{$asm}

luacall(unregister())
// Cleanup of omnifyAbominationHook
omnifyAbominationHook:
  db 66 0F 7F 0A 0F 59 FE

unregistersymbol(omnifyAbominationHook)
unregistersymbol(abomnify)

dealloc(abomnify)
dealloc(abomnifyCreature)

unregistersymbol(morphScaleData)
unregistersymbol(morphScaleIndex)

dealloc(morphScaleIndex)
dealloc(morphScaleData)

// Cleanup of omnifyScaleMorphHook
omnifyScaleMorphHook:
  db 0F 28 80 A0 01 00 00

unregistersymbol(omnifyScaleMorphHook)
unregistersymbol(abominifyMorphStepsResultUpper)
unregistersymbol(abominifyMorphStepsResultLower)
unregistersymbol(abominifyHeightResultUpper)
unregistersymbol(abominifyHeightResultLower)
unregistersymbol(abominifyWidthResultUpper)
unregistersymbol(abominifyWidthResultLower)
unregistersymbol(abominifyDepthResultUpper)
unregistersymbol(abominifyDepthResultLower)
unregistersymbol(unnaturalBigThreshold)
unregistersymbol(unnaturalBigX)
unregistersymbol(unnaturalSmallX)
unregistersymbol(speedMorphDivisor)
unregistersymbol(speedMorph)
unregistersymbol(stopMorphs)

dealloc(stopMorphs)
dealloc(speedMorph)
dealloc(speedMorphDivisor)
dealloc(defaultScaleX)
dealloc(abominifyRandomState)
dealloc(abominifyMorphStepsResultUpper)
dealloc(abominifyMorphStepsResultLower)
dealloc(abominifyHeightResultUpper)
dealloc(abominifyHeightResultLower)
dealloc(abominifyWidthResultUpper)
dealloc(abominifyWidthResultLower)
dealloc(abominifyDepthResultUpper)
dealloc(abominifyDepthResultLower)
dealloc(abominifyMorphModeResultUpper)
dealloc(abominifyMorphModeResultLower)
dealloc(unnaturalBigThreshold)
dealloc(unnaturalBigX)
dealloc(unnaturalSmallX)
dealloc(abominifyDivisor)
dealloc(zeroValue)

dealloc(morphScale)

// Cleanup of omnifyPredatorHook
omnifyPredatorHook:
  db 0F 58 47 70 45 0F C6 DB 00

unregistersymbol(omnifyPredatorHook)
unregistersymbol(playerSpeedX)

dealloc(playerSpeedX)
dealloc(identityValue)
dealloc(initiatePredator)

unregistersymbol(checkBadPointer)

dealloc(checkBadPointer)

// Cleanup of omniPlayerHook
omniPlayerHook:
  db 39 81 68 01 00 00

unregistersymbol(omniPlayerHook)
unregistersymbol(playerCoords)
unregistersymbol(playerSouls)
unregistersymbol(teleport)
unregistersymbol(teleportX)
unregistersymbol(teleportY)
unregistersymbol(teleportZ)
unregistersymbol(player)

dealloc(teleport)
dealloc(teleportX)
dealloc(teleportY)
dealloc(teleportZ)
dealloc(player)
dealloc(playerSouls)
dealloc(playerCoords)
dealloc(getPlayer)

// Cleanup of omnifyApocalypseHook
omnifyApocalypseHook:
  db 2B CE 89 4C 24 30

unregistersymbol(omnifyApocalypseHook)
unregistersymbol(disableEnemyApocalypse)
unregistersymbol(disableSmelterFire)

dealloc(disableEnemyApocalypse)
dealloc(disableSmelterFire)
dealloc(initiateApocalypse)


</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Player"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Current Health"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>player</Address>
              <Offsets>
                <Offset>168</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"X"</Description>
              <VariableType>Float</VariableType>
              <Address>playerCoords</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Y"</Description>
              <VariableType>Float</VariableType>
              <Address>playerCoords</Address>
              <Offsets>
                <Offset>1C4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Z"</Description>
              <VariableType>Float</VariableType>
              <Address>playerCoords</Address>
              <Offsets>
                <Offset>1C8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"Speed"</Description>
              <VariableType>Float</VariableType>
              <Address>playerSpeedX</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Damage"</Description>
              <VariableType>Float</VariableType>
              <Address>playerDamageX</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"Souls"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>playerSouls</Address>
              <Offsets>
                <Offset>EC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>56</ID>
              <Description>"Buff Player Damage"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
playerDamageX:
  dd (float)20.0

[DISABLE]
playerDamageX:
  dd (float)1.0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>99</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Fast Omni"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
playerSpeedX:
  dd (float)3.0

[DISABLE]
playerSpeedX:
  dd (float)1.0
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>107</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Enable God Mode"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
playerGodMode:
  dd 1

[DISABLE]
playerGodMode:
  dd 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>99</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Disable Abomnification"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

abomnify:
  dd 0

[DISABLE]
abomnify:
  dd 1
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>109</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Stop Morphs"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
stopMorphs:
  dd 1

[DISABLE]
stopMorphs:
  dd 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>103</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Enemy Speed"</Description>
          <VariableType>Float</VariableType>
          <Address>enemySpeedX</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Disable Smelter Fire"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
disableSmelterFire:
  dd 1

[DISABLE]
disableSmelterFire:
  dd 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Disable Enemy Apocalypse"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
disableEnemyApocalypse:
  dd 1

[DISABLE]
disableEnemyApocalypse:
  dd 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>111</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Speed Morphs"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
speedMorph:
  dd 1

[DISABLE]
speedMorph:
  dd 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>106</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>Change of movd [r12+r8+04],xmm0</Description>
      <AddressString>DarkSoulsII.exe+30491D</AddressString>
      <Before>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>73</Byte>
        <Byte>D8</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>43</Byte>
        <Byte>0F</Byte>
        <Byte>7E</Byte>
        <Byte>44</Byte>
        <Byte>04</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>43</Byte>
        <Byte>0F</Byte>
        <Byte>7E</Byte>
        <Byte>4C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movaps [rdi+000000F0],xmm2</Description>
      <AddressString>DarkSoulsII.exe+2EC221</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>0F</Byte>
        <Byte>56</Byte>
        <Byte>D1</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>97</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>5F</Byte>
        <Byte>87</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movaps [r14],xmm10</Description>
      <AddressString>DarkSoulsII.exe+B2DDB2</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>16</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>5E</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movaps [r14+10],xmm11</Description>
      <AddressString>DarkSoulsII.exe+B2DDB6</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>16</Byte>
      </Before>
      <Actual>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>5E</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>53</Byte>
        <Byte>B0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movaps [rdi+00000100],xmm2</Description>
      <AddressString>DarkSoulsII.exe+2EC246</AddressString>
      <Before>
        <Byte>55</Byte>
        <Byte>D0</Byte>
        <Byte>0F</Byte>
        <Byte>56</Byte>
        <Byte>D1</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>97</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>05</Byte>
        <Byte>EC</Byte>
        <Byte>2D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss [rcx+18],xmm2</Description>
      <AddressString>DarkSoulsII.exe+4D44F3</AddressString>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>49</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>51</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>59</Byte>
        <Byte>1C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rdx+18],eax</Description>
      <AddressString>DarkSoulsII.exe+5E809F</AddressString>
      <Before>
        <Byte>42</Byte>
        <Byte>14</Byte>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>1C</Byte>
        <Byte>89</Byte>
        <Byte>42</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss [rbx+18],xmm2</Description>
      <AddressString>DarkSoulsII.exe+64E553</AddressString>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>5B</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>53</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>3A</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss [rbx+18],xmm7</Description>
      <AddressString>DarkSoulsII.exe+64E295</AddressString>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>73</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>7B</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>43</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movaps [rcx],xmm3</Description>
      <AddressString>DarkSoulsII.exe+AEB637</AddressString>
      <Before>
        <Byte>D9</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>19</Byte>
      </Actual>
      <After>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>68</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of addps xmm0,[rdi+70]</Description>
      <AddressString>DarkSoulsII.exe+71168E</AddressString>
      <Before>
        <Byte>30</Byte>
        <Byte>2A</Byte>
        <Byte>E5</Byte>
        <Byte>35</Byte>
        <Byte>3D</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>47</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
        <Byte>DB</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movdqa [rcx+10],xmm4</Description>
      <AddressString>DarkSoulsII.exe+AEB695</AddressString>
      <Before>
        <Byte>58</Byte>
        <Byte>E1</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>E5</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>7F</Byte>
        <Byte>61</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>42</Byte>
        <Byte>20</Byte>
        <Byte>41</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movdqa [rbx-10],xmm6</Description>
      <AddressString>DarkSoulsII.exe+4DD029</AddressString>
      <Before>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>7F</Byte>
        <Byte>6B</Byte>
        <Byte>E0</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>7F</Byte>
        <Byte>73</Byte>
        <Byte>F0</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>23</Byte>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movdqa [rbx-20],xmm5</Description>
      <AddressString>DarkSoulsII.exe+4DD024</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>7C</Byte>
        <Byte>1E</Byte>
        <Byte>C5</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>7F</Byte>
        <Byte>6B</Byte>
        <Byte>E0</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>7F</Byte>
        <Byte>73</Byte>
        <Byte>F0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movaps xmm0,[r10+rcx*8]</Description>
      <AddressString>DarkSoulsII.exe+BC0AF7</AddressString>
      <Before>
        <Byte>0C</Byte>
        <Byte>49</Byte>
        <Byte>48</Byte>
        <Byte>03</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>04</Byte>
        <Byte>CA</Byte>
      </Actual>
      <After>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>4C</Byte>
        <Byte>CA</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movaps xmm2,[rcx]</Description>
      <AddressString>DarkSoulsII.exe+AEDF62</AddressString>
      <Before>
        <Byte>DD</Byte>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
        <Byte>DA</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>11</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C2</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of andps xmm2,[rdi]</Description>
      <AddressString>DarkSoulsII.exe+32ED7A</AddressString>
      <Before>
        <Byte>20</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>54</Byte>
        <Byte>17</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>54</Byte>
        <Byte>D3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movaps [r14],xmm2</Description>
      <AddressString>DarkSoulsII.exe+AEBC15</AddressString>
      <Before>
        <Byte>D1</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>D3</Byte>
      </Before>
      <Actual>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>16</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>D3</Byte>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movdqa [rdx+10],xmm0</Description>
      <AddressString>DarkSoulsII.exe+AEDFB9</AddressString>
      <Before>
        <Byte>20</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>3C</Byte>
        <Byte>24</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>7F</Byte>
        <Byte>42</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>28</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movdqa [rdx+20],xmm7</Description>
      <AddressString>DarkSoulsII.exe+AEDFB0</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>7F</Byte>
        <Byte>7A</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>3C</Byte>
        <Byte>24</Byte>
        <Byte>66</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <LuaScript>getAutoAttachList().add("DarkSoulsII.exe")
</LuaScript>
</CheatTable>
